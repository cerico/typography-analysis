name: Version
permissions:
  contents: write
on:
  push:
    branches:
      - main

env:
  APP_NAME: typography

jobs:
  changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-count: "0"
          version-file: "package.json, manifest.json"

      - name: Print the changelog
        run: |
          echo "Tag: ${{ steps.changelog.outputs.tag }}"
          echo "Version: ${{ steps.changelog.outputs.version }}"
          echo "${{ steps.changelog.outputs.clean_changelog }}" > notes.text

      - name: Create Release
        if: steps.changelog.outputs.tag
        run: gh release create ${{ steps.changelog.outputs.tag  }} --notes-file notes.text
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: make a gitconfig
        run: |
          echo -e "[user]
          name = github-runner
          email = githubrunner@google.fi
          " > ~/.gitconfig

      - name: Installs the site
        run: npm_config_yes=true npx venlo@latest --default ${{ env.APP_NAME }} readme

      - name: Copies top readme to index
        run: cp README.md ${{ env.APP_NAME }}/src/content/top/index.md

      - name: Copies changelog to index
        run: cp CHANGELOG.md ${{ env.APP_NAME }}/src/content/top/changelog.md

      - name: Copies images to docsite
        run: cp images/*.png ${{ env.APP_NAME }}/public/images

      - name: Copies icons to docsite
        run: cp -r icons  ${{ env.APP_NAME }}/public

      - name: Build docs site
        run: cd ${{ env.APP_NAME }} && make build

      # - name: Rsync the doc site
      #   uses: burnett01/rsync-deployments@4.1
      #   with:
      #     switches: -a
      #     path: ${{ env.APP_NAME }}/dist/
      #     remote_path: "/var/www/html/${{ env.APP_NAME }}.io37.ch"
      #     remote_host: ${{ env.APP_NAME }}.io37.ch
      #     remote_user: deploy
      #     remote_key: ${{ secrets.DEPLOY_KEY }}
